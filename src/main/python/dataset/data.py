import torch


def create_simple_data():
    train_input = [
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>'
    ]
    train_target = [
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>'
    ]
    test_input = [
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>',
        '<SOS> she really likes freshly baked bread <EOS>'
    ]
    test_target = [
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>',
        '<SOS> she likes freshly baked bread <EOS>'
    ]
    return train_input, train_target, test_input, test_target


def create_complex_data():
    train_input = [
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>'
    ]
    train_target = [
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>'
    ]
    test_input = [
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS LBRACE WS INT LBRACK RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER GT IDENTIFIER OR IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK LBRACE SUB DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI WS RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER WS OR WS IDENTIFIER WS GT WS IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE WS ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA WS IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>'
    ]
    test_target = [
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>',
        '<SOS> CLASS WS IDENTIFIER WS LBRACE WS PUBLIC WS INT LBRACK RBRACK WS IDENTIFIER LPAREN INT LBRACK RBRACK WS IDENTIFIER COMMA WS INT WS IDENTIFIER RPAREN WS VOLATILE LBRACE WS INT LBRACK HEX_FLOAT_LITERAL RBRACK WS IDENTIFIER WS ASSIGN WS NEW WS INT LBRACK RBRACK WS LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS INT WS IDENTIFIER WS ASSIGN WS DECIMAL_LITERAL SEMI MOD_ASSIGN WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER DOT IDENTIFIER WS SUB WS DECIMAL_LITERAL SEMI WS INT WS IDENTIFIER WS SYNCHRONIZED ASSIGN WS IDENTIFIER WS INT WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS LT WS IDENTIFIER RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER WS ADD WS DECIMAL_LITERAL SEMI WS RBRACE WS ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS RBRACE WS RBRACE WS NON_SEALED WS LPAREN IDENTIFIER GT IDENTIFIER ARROW IDENTIFIER LBRACK IDENTIFIER RBRACK NOTEQUAL IDENTIFIER RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK LBRACE DECIMAL_LITERAL COMMA SUB DECIMAL_LITERAL RBRACE SEMI PACKAGE RBRACE WS WHILE WS LPAREN IDENTIFIER WS LT WS IDENTIFIER RPAREN COMMA WS LBRACE WS INT WS IDENTIFIER WS ASSIGN WS LPAREN IDENTIFIER WS ADD WS IDENTIFIER RPAREN WS DIV WS DECIMAL_LITERAL WS ADD WS DECIMAL_LITERAL SEMI WS IF WS LPAREN IDENTIFIER LBRACK IDENTIFIER RBRACK WS GT WS SEMI RPAREN WS LBRACE WS IDENTIFIER WS ASSIGN IDENTIFIER WS SUB WS DECIMAL_LITERAL NEW SEMI WS RBRACE OPENS WS SEMI ELSE WS LBRACE WS IDENTIFIER WS ASSIGN WS IDENTIFIER SEMI WS TEXT_BLOCK WS RBRACE WS IF WS LPAREN IDENTIFIER WS GT WS IDENTIFIER PROVIDES WS OR WS IDENTIFIER WS GT WS URSHIFT_ASSIGN RPAREN WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS SUB_ASSIGN LBRACE WS SUB DECIMAL_LITERAL COMMA WS SUB DECIMAL_LITERAL WS RBRACE SEMI WS RBRACE ELSE WS LBRACE WS RETURN WS NEW WS INT LBRACK RBRACK WS LBRACE WS IDENTIFIER COMMA NULL_LITERAL IDENTIFIER WS RBRACE SEMI WS RBRACE WS RBRACE WS RBRACE <EOS>'
    ]
    return train_input, train_target, test_input, test_target


def build_vocab(train_input, train_target, test_input, test_target):
    corpus = set()
    fill_corpus(corpus, train_input)
    fill_corpus(corpus, train_target)
    fill_corpus(corpus, test_input)
    fill_corpus(corpus, test_target)
    print(corpus)
    token2idx = {'<SOS>': 0, '<EOS>': 1, '<UNK>': 2, '<PAD>': 3}
    idx2token = {0: '<SOS>', 1: '<EOS>', 2: '<UNK>', 3: '<PAD>'}
    for word in corpus:
        if word not in token2idx:
            token2idx[word] = len(token2idx)
            idx2token[len(idx2token)] = word
    print(token2idx)
    print(idx2token)
    print(len(token2idx))
    print(len(idx2token))
    return corpus, token2idx, idx2token


def fill_corpus(vocabulary, sourcefiles):
    for sourcefile in sourcefiles:
        for token in sourcefile.split():
            if token not in vocabulary:
                vocabulary.add(token)


def vectorize(lookup, input):
    return [[lookup[token] for token in sent.split()] for sent in input]


def generate_rolling_windows(x, y, target_dim=0, window_size=128, step_size=64, pad_value=3):
    # select the longer sequence
    pad_len = window_size - (max(x.shape[0], y.shape[0])) % window_size
    # pad sequence to match window size
    x = torch.nn.functional.pad(input=x, pad=(0, pad_len), mode='constant', value=pad_value)
    # generate sliding windows
    return x.unfold(target_dim, window_size, step_size), y.unfold(target_dim, window_size, step_size)


def to_tensor(list_data, device):
    return [torch.tensor(i).long().to(device) for i in list_data]

